version: 2 # use CircleCI 2.0
jobs: # A basic unit of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    # directory where steps are run
    working_directory: ~/circleci-evohomeclient
    docker: # run the steps with Docker
      # CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
      - image: cimg/python:3.13.1
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: sudo chown -R circleci:circleci /usr/local/bin
      # - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - run:
          command: |
            pip install nose requests_mock coverage pylint
      - run:
          command: |
            mkdir test-results
            pip install requests
  test:
    docker:
      - image: cimg/python:3.13.1
    steps:
      - checkout
      - run:
          command: |
            pip install pynose requests_mock coverage black
      - run:
          command: |
            mkdir test-results
            pip install requests
      - run:
          name: Test
          command: |
            black --safe --quiet evohomeclient
            black --safe --quiet evohomeclient2
            nosetests --xunit-file=test-results/junit.xml
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: htmlcov
          destination: coverage
  deploy:
    docker:
      - image: cimg/python:3.13.1
    steps:
      - checkout
      - run:
          command: |
            pip install nose requests_mock coverage twine
      - run:
          command: |
            pip install requests
      - run:
          name: verify git tag vs. version
          command: |
            python setup.py verify
      - run:
          name: Build
          command: |
            # create a source distribution
            python setup.py sdist
            # create a wheel
            python setup.py bdist_wheel
      - run:
          name: init .pypirc
          command: |
            echo -e "[distutils]" >> ~/.pypirc
            echo -e "index-servers=" >> ~/.pypirc
            echo -e "    pypi" >> ~/.pypirc
            echo -e "    test" >> ~/.pypirc
            echo -e " " >> ~/.pypirc
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "repository = https://upload.pypi.org/legacy/" >> ~/.pypirc
            echo -e "username = __token__" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
            echo -e " " >> ~/.pypirc
            echo -e "[test]" >> ~/.pypirc
            echo -e "repository = https://test.pypi.org/legacy/" >> ~/.pypirc
            echo -e "username = __token__" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: upload to pypi
          command: |
            twine upload -r pypi dist/*
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters: # required since `deploy` has tag filters AND requires `build`
            tags:
              only: /.*/
      - test:
          requires:
            - build
          filters: # required since `deploy` has tag filters AND requires `build`
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
            - test
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
